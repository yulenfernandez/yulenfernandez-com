/*----------------------------------------------------------------------------*\
  2-TOOLS / MIXINS
\*----------------------------------------------------------------------------*/


@mixin themeColorVar($property, $varName, $writeTransition) {
  #{$property}: map-get($token-color-fallbacks, $varName);
  #{$property}: var(--#{$varName});

  @if ($writeTransition) {
    transition: background-color $token-animation-normal, color $token-animation-normal, border-color $token-animation-normal;
    body.preload & { transition: none; }
  }
}

//Generate font-size for all breaks points
@mixin genMedias($tag, $property, $map) {

  $first-loop: true;
  @each $break-name, $break-value in $token-screen-map {

    @if ($first-loop) {
      @media (max-width: #{$break-value}) {
        #{$tag} {
          #{$property}: map-get($map, $break-name);
        }
      }
    } @else {
      @media (min-width: #{$break-value}) {
        #{$tag} {
          #{$property}: map-get($map, $break-name);
        }
      }
    }

    $first-loop: false;
  }

}


//If needed to use specific media queries
@mixin for-phone-only {
  @media (max-width: $token-screen-phone-max) { @content; }
}

@mixin for-tablet-portrait-up {
  @media (min-width: $token-screen-tablet-portrait-min) { @content; }
}
@mixin for-tablet-portrait-only {
  @media (min-width: $token-screen-tablet-portrait-min) and (max-width: $token-screen-tablet-landscape-min) { @content; }
}

@mixin for-tablet-landscape-up {
  @media (min-width: $token-screen-tablet-landscape-min) { @content; }
}
@mixin for-tablet-landscape-only {
  @media (min-width: $token-screen-tablet-landscape-min) and (max-width: $token-screen-desktop-min) { @content; }
}

@mixin for-desktop-up {
  @media (min-width: $token-screen-desktop-min) { @content; }
}
@mixin for-desktop-only {
  @media (min-width: $token-screen-desktop-min) and (max-width: $token-screen-large-desktop-min) { @content; }
}

@mixin for-big-desktop-up {
  @media (min-width: $token-screen-large-desktop-min) { @content; }
}


/**
 * Common shared text styles
 */

 //To adapt line-height on screen's size
@include genMedias(":root", "--token-font-line-height", $token-font-line-height-map);


@mixin text-style {
  font-family: 'Work Sans', Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;
  font-weight: $token-font-weight-normal;
  font-weight: var(--token-font-weight-normal);
  line-height: $token-font-line-height;
  line-height: var(--token-font-line-height);
  @include themeColorVar("color", "token-color-text", true);
}

//We use mixins for text styles as they can be used in other block that need them, eg. c-footer
@mixin h1-style {
  @include text-style;
  font-weight: $token-font-weight-bold;
  font-weight: var(--token-font-weight-bold);
  font-size: $token-font-size-h1;
}

@mixin p-style {
  @include text-style;
  font-size: $token-font-size-body;
}

@mixin small-text-style {
  @include text-style;
  font-size: $token-font-size-xs;
}

@mixin a-style {
  @include text-style;
	line-height: 1;
	@include themeColorVar("color", "token-color-link", false);
  text-decoration: none;
}



/**
 * Others
 */ 
@mixin section-padding {
	@include for-phone-only {	padding: 6rem 2.4rem; }
	@include for-tablet-portrait-up { padding: 2.4rem; }
}
