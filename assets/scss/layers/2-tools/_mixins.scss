/*----------------------------------------------------------------------------*\
  2-TOOLS / MIXINS
\*----------------------------------------------------------------------------*/


@mixin themeColorVar($property, $varName, $opacity, $writeTransition) {
	#{$property}: rgba(map-get(map-get($fallbackVars, "colors"), $varName), $opacity);
	@supports (--css: variables) {
		#{$property}: alpha(var(--#{$varName}), $opacity);
	}

	@if ($writeTransition) {
		transition-property: background, border-color, color;
		transition-duration: .5s;
		transition-timing-function: ease-out;
	}

	body.preload & { transition: none; }
}

@mixin customVarFallback($property, $key, $varName) {
	#{$property}: map-get(map-get($fallbackVars, $key), $varName);
	@supports (--css: variables) {
		#{$property}: var(--#{$varName});
	}
}


//Generate font-size for all breaks points
@mixin genMedias($tag, $property, $map) {

  $first-loop: true;
  @each $break-name, $break-value in $break-list {

    @if ($first-loop) {
      @media (max-width: #{$break-value}) {
        #{$tag} {
          #{$property}: map-get($map, $break-name);
        }
      }
    } @else {
      @media (min-width: #{$break-value}) {
        #{$tag} {
          #{$property}: map-get($map, $break-name);
        }
      }
    }

    $first-loop: false;
  }

}


//If needed to use specific media queries
@mixin for-phone-only {
  @media (max-width: $phone-max) { @content; }
}

@mixin for-tablet-portrait-up {
  @media (min-width: $tablet-portrait-min) { @content; }
}
@mixin for-tablet-portrait-only {
  @media (min-width: $tablet-portrait-min) and (max-width: $tablet-landscape-min) { @content; }
}

@mixin for-tablet-landscape-up {
  @media (min-width: $tablet-landscape-min) { @content; }
}
@mixin for-tablet-landscape-only {
  @media (min-width: $tablet-landscape-min) and (max-width: $desktop-min) { @content; }
}

@mixin for-desktop-up {
  @media (min-width: $desktop-min) { @content; }
}
@mixin for-desktop-only {
  @media (min-width: $desktop-min) and (max-width: $large-desktop-min) { @content; }
}

@mixin for-big-desktop-up {
  @media (min-width: $large-desktop-min) { @content; }
}


//Used to set margin according to vertical rythming
@function rwd-vertical-rythm($multiple) {
  @return calc(var(--line-height) * #{$multiple} * 1rem);
}



/**
 * Common shared text styles
 */
@mixin text-style {
  font-family: 'Work Sans', Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;
	@include customVarFallback(font-weight, types, text-weight);
	@include themeColorVar(color, text, 1, true);
}

@mixin line-height {
	@include customVarFallback(line-height, types, line-height);
}

//We use mixins for text styles as they can be used in other block that need them, eg. c-footer
@mixin h1-style {
  @include text-style;
	@include line-height;
	@include customVarFallback(font-weight, types, h1-weight);
  font-size: $h1-size;
}

@mixin p-style {
  @include text-style;
	@include line-height;
  font-size: $text-size;
}

@mixin small-text-style {
  @include text-style;
	@include line-height;
  font-size: $small-text-size;
}

@mixin a-style {
  @include text-style;
	line-height: 1;
	@include themeColorVar(color, link, 1, false);
  text-decoration: none;
}



/**
 * Others
 */ 
@mixin section-padding {
	@include for-phone-only {	padding: 6rem 2.4rem; }
	@include for-tablet-portrait-up { padding: 2.4rem; }
}
